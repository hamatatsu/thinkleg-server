import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useRef, useState } from 'react';
import RealtimeChart from '../components/realtimechart';
import MQTT from 'mqtt';

interface Data { x: number, y: number }

const Test: NextPage = () => {
  const mqtt_url = "mqtt://host.docker.internal:9001"
  const mqtt_options = { username: "ham", password: "thinkleg" } as MQTT.IClientOptions;
  const [series, setSeries] = useState([{ name: "test", data: [] }] as Array<{ name: string, data: Array<Data> }>)
  let dataList = [] as Array<Data>
  // const [dataList, setDataList] = useState([] as Array<Data>)
  // const dataList = [] as Array<Data>

  const clientRef = useRef<MQTT.MqttClient | null>(null)

  useEffect(() => {
    if (clientRef.current) return
    clientRef.current = MQTT.connect(mqtt_url, mqtt_options);
    const client = clientRef.current;
    client.subscribe('test');
    client.on('message', (topic, message) => {
      const date = Date.now();
      const value = parseInt(message.toString());
      const data = { x: date, y: value } as Data
      dataList = [...dataList, data]
      if (dataList.length > 600) {
        dataList = dataList.slice(300)
      }
      setSeries([{ name: "test", data: dataList }])
    });
    client.on('connect', () => {
      console.log("ok")
    })

    return () => {
      // if (clientRef.current) {
      //   clientRef.current.unsubscribe('test');
      //   clientRef.current.end();
      // }
    };
  });

  return (
    <>
      <Head>
        <title>Test Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="app">
        <div className="row">
          <div className="mixed-chart">
            <RealtimeChart series={series} />
          </div>
        </div>
      </div>
    </>
  )
}

export default Test
